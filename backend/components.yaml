components:
  schemas:
    AuthenticationKey:
      type: object
      required:
        - key
      properties:
        key:
          type: string
          format: uuid
    UserCredentials:
      type: object
      required:
        - username
        - password
      properties:
        username:
          type: string
          example: "jane"
        password:
          type: string
          example: "abc123"
    Employee:
      type: object
      required:
        - id
        - firstName
        - lastName
        - role
        - username
        - password
        - authenticationKey
      properties:
        id: 
          type: number
          example: 1
        firstName:
          type: string
          example: "Jane"
        lastName:
          type: string
          example: "Doe"
        role:
          type: string
          example: "sales"
          enum: [admin, stock, sales]
        username:
          type: string
          example: "jane"
        password:
          type: string
          example: "******"
        authenticationKey:
          type: string
          format: uuid
    Product:
      type: object
      required:
        - name
        - stock
        - price
        - description
        - updatedByEmployeeId
        - deleted
      properties:
        id: 
          type: number
          example: 1
        name:
          type: string
          example: "Latte"
        stock: 
          type: number
          example: 10
        price: 
          type: number
          example: 10
        description:
          type: string
          example: "A coffee with milk"
        updatedByEmployeeId:
          type: number
          example: 1
        deleted:
          type: number
          example: 0
    Sale:
      type: object
      required:
        - id
        - productId
        - discountPercentage
        - date
        - startTime
        - endTime
      properties:
        id: 
          type: number
          example: 1
        productId: 
          type: number
          example: 1
        discountPercentage: 
          type: number
          example: 0.5
        date:
          type: string
          format: date
        startTime:
          type: string
        endTime:
          type: string
  responses:
    Deleted:
      description: Item deleted
      content:
        application/json:
          schema:
            type: object
            properties:
              message: 
                type: string
                example: "Item deleted"
    Updated:
      description: An item has been updated
      content:
        application/json:
          schema:
            type: object
            properties:
              message: 
                type: string
                example: "New item created"
    LoginSuccessful:
      description: Login successful
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/AuthenticationKey"
    Created:
      description: A new item has been created
      content:
        application/json:
          schema:
            type: object
            required:
              - id
              - message
            properties:
              id:
                type: number
                example: 1
              message: 
                type: string
                example: "New item created"
    NotFound:
      description: Item not found 
      content:
        application/json:
          schema:
            type: object
            required:
              - message
            properties:
              message:
                type: string
                example: "The requested item could not be found"
    Error:
      description: An error has occurred 
      content:
        application/json:
          schema:
            type: object
            required:
              - message
            properties:
              message:
                type: string
                example: "Error processing request"
              errors:
                type: array
